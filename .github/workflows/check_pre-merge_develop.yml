name: develop pre-merge check

on: 
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

env:
  CMAKE_VERSION: 3.15.5

jobs:
  cmake-build:
    name: cmake build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        dotnet: [2.1.804, 3.1.200]

    steps:
    - name: setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - uses: actions/checkout@v1
    - name: cmake-useCache-ubuntu
      if: matrix.os == 'ubuntu-latest'
      uses: actions/cache@v1
      id: cache
      with:
        path: cache/cmake
        key: ${{ runner.os }}-cmake-3.15.5-x64
        restore-keys: ${{ runner.os }}-cmake-3.15.5-x64
    - name: cmake-download-ubuntu
      if: matrix.os == 'ubuntu-latest' && steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p cache/cmake
        cd cache/cmake
        wget https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz
        cd ../..
    - name: cmake-setting-ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        export cmake_file_name="cmake-$CMAKE_VERSION-Linux-x86_64"
        cd cache/cmake
        tar zxvf $cmake_file_name.tar.gz
        chmod +x $cmake_file_name/bin/cmake $cmake_file_name/bin/ctest
        export CURRENT_DIR=$(pwd)
        echo ::add-path::$CURRENT_DIR/$cmake_file_name/bin
        cd ../..
    - name: build - 3.1.100
      if: matrix.os != 'windows-latest' && matrix.dotnet != '2.1.802'
      run: ./tools/build.sh
    - name: test - 3.1.100
      if: matrix.os != 'windows-latest' && matrix.dotnet != '2.1.802'
      run: ./tools/test.sh
    - name: build - 2.1.802
      if: matrix.os != 'windows-latest' && matrix.dotnet == '2.1.802'
      run: ./tools/build_core2.sh
    - name: test - 2.1.802
      if: matrix.os != 'windows-latest' && matrix.dotnet == '2.1.802'
      run: ./tools/test_core2.sh
    - name: build-windows
      if: matrix.os == 'windows-latest'
      run: .\tools\build.bat
    - name: test-windows
      if: matrix.os == 'windows-latest'
      run: .\tools\test.bat
    - name: ubuntu-after
      if: matrix.os == 'ubuntu-latest'
      run: rm -rf cache/cmake/cmake-$CMAKE_VERSION-Linux-x86_64
